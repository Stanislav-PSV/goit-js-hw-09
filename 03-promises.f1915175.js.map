{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAASC,SAASC,cAAc,wBAEhCC,EAASF,SAASC,cAAc,0BAChCE,EAAUH,SAASC,cAAc,yBACxBD,SAASC,cAAc,SAC/BG,iBAAiB,UAIxB,SAAuBC,GACrBA,EAAMC,iBAEN,IAEIC,EAFAC,EAAcC,OAAOP,EAAOQ,OAIhC,IAAKH,EAAI,EAAGA,GAAKC,EAAaD,GAAK,EAAG,CACjBE,OAAON,EAAQO,OAAlC,IAEMC,EAAWJ,EACXK,EACJH,OAAON,EAAQO,OAASH,EAAIE,OAAOV,EAAOW,OAASD,OAAOV,EAAOW,OAE1DG,YAAW,WAClBC,EAAcH,EAAUC,KACvBA,OAIP,SAASE,EAAcH,EAAUC,GACf,IAAIG,SAAQ,SAACC,EAASC,GACdC,KAAKC,SAAW,GAGpCH,EAAQ,uBAAwCI,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDK,EAAK,sBAAqCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,UAKnDS,MAAK,SAAAC,GACJzB,EAAA0B,OAAOC,QAAQF,GACfG,QAAQC,IAAIJ,MAGbK,OAAM,SAAAC,GACL/B,EAAA0B,OAAOM,QAAQD,GACfH,QAAQC,IAAIE,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst stepEl = document.querySelector('input[name = \"step\"]');\n\nconst amount = document.querySelector('input[name = \"amount\"]');\nconst delayEl = document.querySelector('input[name = \"delay\"]');\nconst submit = document.querySelector('.form');\nsubmit.addEventListener('submit', startFunction);\n\nlet timeId = 0;\n\nfunction startFunction(event) {\n  event.preventDefault();\n\n  let amountValue = Number(amount.value);\n\n  let i;\n\n  for (i = 1; i <= amountValue; i += 1) {\n    const firstDelay = Number(delayEl.value);\n\n    const position = i;\n    const delay =\n      Number(delayEl.value) + i * Number(stepEl.value) - Number(stepEl.value);\n\n    timeId = setTimeout(() => {\n      createPromise(position, delay);\n    }, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`); // Fulfill\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`); // Reject\n    }\n  });\n\n  promise\n    .then(result => {\n      Notify.success(result);\n      console.log(result);\n    })\n\n    .catch(error => {\n      Notify.failure(error);\n      console.log(error);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$stepEl","document","querySelector","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$delayEl","addEventListener","event","preventDefault","i","amountValue","Number","value","position","delay","setTimeout","$ce04d3a99e08e73b$var$createPromise","Promise","resolve","reject","Math","random","concat","then","result","Notify","success","console","log","catch","error","failure"],"version":3,"file":"03-promises.f1915175.js.map"}